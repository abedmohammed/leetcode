class DetectSquares(object):
    def __init__(self):
        self.coords = {}

    def add(self, point):
        x, y = point
        if y not in self.coords:
            self.coords[y] = {}

        self.coords[y][x] = self.coords[y].get(x, 0) + 1

    def count(self, point):
        x, y = point
        count = 0
        # find point in line
        if y not in self.coords:
            return 0

        for adjX in self.coords[y]:
            distance = x - adjX

            if distance == 0:
                continue

            point2 = self.coords[y][adjX]

            # check under
            if y - abs(distance) in self.coords:
                if (
                    x in self.coords[y - abs(distance)]
                    and (x - distance) in self.coords[y - abs(distance)]
                ):
                    point3 = self.coords[y - abs(distance)][x]
                    point4 = self.coords[y - abs(distance)][(x - distance)]
                    count += point2 * point3 * point4

            # check above
            if y + abs(distance) in self.coords:
                if (
                    x in self.coords[y + abs(distance)]
                    and (x - distance) in self.coords[y + abs(distance)]
                ):
                    point3 = self.coords[y + abs(distance)][x]
                    point4 = self.coords[y + abs(distance)][(x - distance)]
                    count += point2 * point3 * point4

        return count


# Your DetectSquares object will be instantiated and called as such:
detectSquares = DetectSquares()

commands = [
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
    "add",
    "add",
    "add",
    "count",
]

cases = [
    [[5, 10]],
    [[10, 5]],
    [[10, 10]],
    [[5, 5]],
    [[3, 0]],
    [[8, 0]],
    [[8, 5]],
    [[3, 5]],
    [[9, 0]],
    [[9, 8]],
    [[1, 8]],
    [[1, 0]],
    [[0, 0]],
    [[8, 0]],
    [[8, 8]],
    [[0, 8]],
    [[1, 9]],
    [[2, 9]],
    [[2, 10]],
    [[1, 10]],
    [[7, 8]],
    [[2, 3]],
    [[2, 8]],
    [[7, 3]],
    [[9, 10]],
    [[9, 5]],
    [[4, 5]],
    [[4, 10]],
    [[0, 9]],
    [[4, 5]],
    [[4, 9]],
    [[0, 5]],
    [[1, 10]],
    [[10, 1]],
    [[10, 10]],
    [[1, 1]],
    [[10, 0]],
    [[2, 0]],
    [[2, 8]],
    [[10, 8]],
    [[7, 6]],
    [[4, 6]],
    [[4, 9]],
    [[7, 9]],
    [[10, 9]],
    [[10, 0]],
    [[1, 0]],
    [[1, 9]],
    [[0, 9]],
    [[8, 1]],
    [[0, 1]],
    [[8, 9]],
    [[3, 9]],
    [[10, 9]],
    [[3, 2]],
    [[10, 2]],
    [[3, 8]],
    [[9, 2]],
    [[3, 2]],
    [[9, 8]],
    [[0, 9]],
    [[7, 9]],
    [[0, 2]],
    [[7, 2]],
    [[10, 1]],
    [[1, 10]],
    [[10, 10]],
    [[1, 1]],
    [[6, 10]],
    [[2, 6]],
    [[6, 6]],
    [[2, 10]],
    [[6, 0]],
    [[6, 2]],
    [[8, 2]],
    [[8, 0]],
    [[6, 5]],
    [[7, 4]],
    [[6, 4]],
    [[7, 5]],
    [[2, 10]],
    [[8, 4]],
    [[2, 4]],
    [[8, 10]],
    [[2, 6]],
    [[2, 5]],
    [[1, 5]],
    [[1, 6]],
    [[10, 9]],
    [[10, 0]],
    [[1, 9]],
    [[1, 0]],
    [[0, 9]],
    [[5, 9]],
    [[0, 4]],
    [[5, 4]],
    [[3, 6]],
    [[9, 0]],
    [[3, 0]],
    [[9, 6]],
    [[0, 2]],
    [[1, 1]],
    [[0, 1]],
    [[1, 2]],
    [[1, 7]],
    [[8, 0]],
    [[8, 7]],
    [[1, 0]],
    [[2, 7]],
    [[4, 5]],
    [[2, 5]],
    [[4, 7]],
    [[6, 7]],
    [[3, 7]],
    [[6, 4]],
    [[3, 4]],
    [[10, 2]],
    [[2, 10]],
    [[2, 2]],
    [[10, 10]],
    [[10, 1]],
    [[1, 10]],
    [[1, 1]],
    [[10, 10]],
    [[2, 10]],
    [[2, 9]],
    [[3, 9]],
    [[3, 10]],
    [[10, 1]],
    [[1, 10]],
    [[1, 1]],
    [[10, 10]],
    [[10, 4]],
    [[10, 3]],
    [[9, 4]],
    [[9, 3]],
    [[6, 6]],
    [[6, 10]],
    [[10, 6]],
    [[10, 10]],
    [[9, 7]],
    [[4, 7]],
    [[9, 2]],
    [[4, 2]],
    [[2, 3]],
    [[2, 1]],
    [[0, 3]],
    [[0, 1]],
    [[2, 8]],
    [[10, 8]],
    [[2, 0]],
    [[10, 0]],
    [[8, 4]],
    [[2, 10]],
    [[8, 10]],
    [[2, 4]],
    [[0, 0]],
    [[9, 9]],
    [[0, 9]],
    [[9, 0]],
    [[5, 7]],
    [[5, 8]],
    [[4, 7]],
    [[4, 8]],
    [[10, 10]],
    [[10, 1]],
    [[1, 1]],
    [[1, 10]],
    [[6, 8]],
    [[7, 8]],
    [[6, 9]],
    [[7, 9]],
    [[4, 6]],
    [[1, 6]],
    [[4, 3]],
    [[1, 3]],
    [[10, 1]],
    [[1, 10]],
    [[10, 10]],
    [[1, 1]],
    [[7, 7]],
    [[7, 10]],
    [[4, 7]],
    [[4, 10]],
    [[0, 0]],
    [[8, 0]],
    [[0, 8]],
    [[8, 8]],
    [[3, 5]],
    [[2, 4]],
    [[3, 4]],
    [[2, 5]],
    [[0, 6]],
    [[0, 2]],
    [[4, 2]],
    [[4, 6]],
    [[5, 2]],
    [[9, 6]],
    [[9, 2]],
    [[5, 6]],
    [[1, 1]],
    [[1, 10]],
    [[10, 10]],
    [[10, 1]],
    [[7, 5]],
    [[2, 0]],
    [[2, 5]],
    [[7, 0]],
    [[1, 9]],
    [[1, 2]],
    [[8, 2]],
    [[8, 9]],
    [[3, 8]],
    [[3, 3]],
    [[8, 3]],
    [[8, 8]],
    [[3, 10]],
    [[9, 10]],
    [[3, 4]],
    [[9, 4]],
    [[0, 2]],
    [[0, 10]],
    [[8, 10]],
    [[8, 2]],
    [[9, 4]],
    [[8, 4]],
    [[8, 5]],
    [[9, 5]],
    [[9, 8]],
    [[4, 3]],
    [[4, 8]],
    [[9, 3]],
    [[4, 9]],
    [[0, 5]],
    [[0, 9]],
    [[4, 5]],
    [[1, 3]],
    [[3, 5]],
    [[1, 5]],
    [[3, 3]],
    [[0, 0]],
    [[0, 8]],
    [[8, 0]],
    [[8, 8]],
    [[2, 8]],
    [[10, 0]],
    [[10, 8]],
    [[2, 0]],
    [[8, 1]],
    [[0, 9]],
    [[8, 9]],
    [[0, 1]],
    [[4, 9]],
    [[4, 6]],
    [[1, 9]],
    [[1, 6]],
    [[0, 9]],
    [[0, 8]],
    [[1, 9]],
    [[1, 8]],
    [[5, 1]],
    [[5, 6]],
    [[10, 1]],
    [[10, 6]],
    [[9, 2]],
    [[2, 2]],
    [[2, 9]],
    [[9, 9]],
    [[5, 5]],
    [[8, 5]],
    [[5, 8]],
    [[8, 8]],
    [[8, 0]],
    [[1, 0]],
    [[8, 7]],
    [[1, 7]],
    [[8, 2]],
    [[5, 5]],
    [[5, 2]],
    [[8, 5]],
    [[6, 6]],
    [[6, 8]],
    [[8, 6]],
    [[8, 8]],
    [[2, 10]],
    [[10, 2]],
    [[2, 2]],
    [[10, 10]],
    [[1, 9]],
    [[8, 2]],
    [[1, 2]],
    [[8, 9]],
    [[7, 4]],
    [[7, 2]],
    [[9, 4]],
    [[9, 2]],
    [[1, 9]],
    [[1, 0]],
    [[10, 0]],
    [[10, 9]],
    [[2, 10]],
    [[2, 3]],
    [[9, 10]],
    [[9, 3]],
    [[10, 0]],
    [[1, 0]],
    [[1, 9]],
    [[10, 9]],
    [[8, 10]],
    [[1, 10]],
    [[1, 3]],
    [[8, 3]],
    [[0, 9]],
    [[9, 9]],
    [[0, 0]],
    [[9, 0]],
    [[7, 9]],
    [[8, 9]],
    [[7, 8]],
    [[8, 8]],
    [[3, 1]],
    [[9, 7]],
    [[9, 1]],
    [[3, 7]],
    [[5, 9]],
    [[6, 9]],
    [[5, 8]],
    [[6, 8]],
    [[0, 1]],
    [[0, 10]],
    [[9, 10]],
    [[9, 1]],
    [[8, 0]],
    [[8, 2]],
    [[10, 2]],
    [[10, 0]],
    [[8, 0]],
    [[0, 8]],
    [[8, 8]],
    [[0, 0]],
    [[6, 7]],
    [[5, 8]],
    [[5, 7]],
    [[6, 8]],
    [[0, 9]],
    [[0, 2]],
    [[7, 9]],
    [[7, 2]],
    [[5, 0]],
    [[5, 5]],
    [[10, 0]],
    [[10, 5]],
    [[1, 10]],
    [[10, 10]],
    [[10, 1]],
    [[1, 1]],
    [[9, 2]],
    [[9, 10]],
    [[1, 2]],
    [[1, 10]],
    [[1, 10]],
    [[10, 1]],
    [[10, 10]],
    [[1, 1]],
    [[9, 9]],
    [[0, 9]],
    [[0, 0]],
    [[9, 0]],
    [[9, 6]],
    [[9, 3]],
    [[6, 3]],
    [[6, 6]],
    [[10, 4]],
    [[6, 0]],
    [[10, 0]],
    [[6, 4]],
    [[6, 8]],
    [[0, 2]],
    [[0, 8]],
    [[6, 2]],
    [[7, 9]],
    [[0, 9]],
    [[7, 2]],
    [[0, 2]],
    [[9, 1]],
    [[9, 10]],
    [[0, 10]],
    [[0, 1]],
    [[10, 0]],
    [[10, 9]],
    [[1, 9]],
    [[1, 0]],
    [[1, 6]],
    [[1, 9]],
    [[4, 9]],
    [[4, 6]],
    [[0, 8]],
    [[1, 9]],
    [[0, 9]],
    [[1, 8]],
    [[1, 1]],
    [[9, 1]],
    [[1, 9]],
    [[9, 9]],
    [[2, 5]],
    [[2, 9]],
    [[6, 5]],
    [[6, 9]],
    [[7, 3]],
    [[2, 3]],
    [[2, 8]],
    [[7, 8]],
    [[9, 4]],
    [[4, 4]],
    [[9, 9]],
    [[4, 9]],
    [[4, 4]],
    [[2, 4]],
    [[4, 2]],
    [[2, 2]],
    [[0, 3]],
    [[0, 2]],
    [[1, 3]],
    [[1, 2]],
    [[10, 9]],
    [[10, 2]],
    [[3, 2]],
    [[3, 9]],
    [[5, 6]],
    [[10, 6]],
    [[10, 1]],
    [[5, 1]],
    [[9, 0]],
    [[0, 9]],
    [[9, 9]],
    [[0, 0]],
    [[5, 6]],
    [[9, 2]],
    [[9, 6]],
    [[5, 2]],
    [[3, 3]],
    [[10, 3]],
    [[10, 10]],
    [[3, 10]],
    [[2, 4]],
    [[2, 10]],
    [[8, 4]],
    [[8, 10]],
    [[4, 9]],
    [[1, 9]],
    [[4, 6]],
    [[1, 6]],
    [[1, 8]],
    [[9, 0]],
    [[1, 0]],
    [[9, 8]],
    [[10, 3]],
    [[5, 8]],
    [[5, 3]],
    [[10, 8]],
    [[8, 2]],
    [[0, 10]],
    [[8, 10]],
    [[0, 2]],
    [[9, 0]],
    [[2, 7]],
    [[9, 7]],
    [[2, 0]],
    [[0, 4]],
    [[5, 9]],
    [[0, 9]],
    [[5, 4]],
    [[5, 3]],
    [[10, 3]],
    [[5, 8]],
    [[10, 8]],
    [[6, 4]],
    [[7, 4]],
    [[6, 5]],
    [[7, 5]],
    [[9, 1]],
    [[0, 1]],
    [[9, 10]],
    [[0, 10]],
    [[5, 10]],
    [[5, 7]],
    [[8, 7]],
    [[8, 10]],
    [[8, 0]],
    [[8, 7]],
    [[1, 7]],
    [[1, 0]],
    [[1, 1]],
    [[9, 9]],
    [[1, 9]],
    [[9, 1]],
    [[3, 1]],
    [[3, 5]],
    [[7, 5]],
    [[7, 1]],
    [[5, 8]],
    [[5, 3]],
    [[10, 8]],
    [[10, 3]],
    [[0, 9]],
    [[2, 7]],
    [[2, 9]],
    [[0, 7]],
    [[9, 3]],
    [[9, 7]],
    [[5, 3]],
    [[5, 7]],
    [[0, 0]],
    [[9, 0]],
    [[9, 9]],
    [[0, 9]],
    [[6, 4]],
    [[4, 2]],
    [[4, 4]],
    [[6, 2]],
    [[1, 9]],
    [[1, 5]],
    [[5, 5]],
    [[5, 9]],
    [[7, 7]],
    [[0, 7]],
    [[0, 0]],
    [[7, 0]],
    [[1, 3]],
    [[1, 9]],
    [[7, 3]],
    [[7, 9]],
    [[0, 9]],
    [[9, 9]],
    [[9, 0]],
    [[0, 0]],
    [[1, 8]],
    [[3, 6]],
    [[3, 8]],
    [[1, 6]],
    [[419, 351]],
    [[798, 351]],
    [[798, 730]],
    [[419, 730]],
    [[998, 1]],
    [[0, 999]],
    [[998, 999]],
    [[0, 1]],
    [[226, 561]],
    [[269, 561]],
    [[226, 604]],
    [[269, 604]],
    [[200, 274]],
    [[200, 793]],
    [[719, 793]],
    [[719, 274]],
    [[995, 99]],
    [[146, 948]],
    [[146, 99]],
    [[995, 948]],
    [[420, 16]],
    [[962, 558]],
    [[420, 558]],
    [[962, 16]],
    [[217, 833]],
    [[945, 105]],
    [[217, 105]],
    [[945, 833]],
    [[26, 977]],
    [[26, 7]],
    [[996, 7]],
    [[996, 977]],
    [[96, 38]],
    [[96, 483]],
    [[541, 483]],
    [[541, 38]],
    [[38, 924]],
    [[961, 1]],
    [[961, 924]],
    [[38, 1]],
    [[438, 609]],
    [[818, 609]],
    [[818, 229]],
    [[438, 229]],
]

expected = [
    "",
    "",
    "",
    "",
    1,
    "",
    "",
    "",
    1,
    "",
    "",
    "",
    1,
    "",
    "",
    "",
    2,
    "",
    "",
    "",
    1,
    "",
    "",
    "",
    1,
    "",
    "",
    "",
    1,
    "",
    "",
    "",
    2,
    "",
    "",
    "",
    2,
    "",
    "",
    "",
    2,
    "",
    "",
    "",
    2,
    "",
    "",
    "",
    5,
    "",
    "",
    "",
    6,
    "",
    "",
    "",
    2,
    "",
    "",
    "",
    3,
    "",
    "",
    "",
    3,
    "",
    "",
    "",
    14,
    "",
    "",
    "",
    3,
    "",
    "",
    "",
    1,
    "",
    "",
    "",
    2,
    "",
    "",
    "",
    2,
    "",
    "",
    "",
    4,
    "",
    "",
    "",
    20,
    "",
    "",
    "",
    4,
    "",
    "",
    "",
    5,
    "",
    "",
    "",
    10,
    "",
    "",
    "",
    26,
    "",
    "",
    "",
    8,
    "",
    "",
    "",
    3,
    "",
    "",
    "",
    7,
    "",
    "",
    "",
    21,
    "",
    "",
    "",
    20,
    "",
    "",
    "",
    52,
    "",
    "",
    "",
    6,
    "",
    "",
    "",
    56,
    "",
    "",
    "",
    2,
    "",
    "",
    "",
    5,
    "",
    "",
    "",
    17,
    "",
    "",
    "",
    18,
    "",
    "",
    "",
    13,
    "",
    "",
    "",
    19,
    "",
    "",
    "",
    102,
    "",
    "",
    "",
    9,
    "",
    "",
    "",
    2,
    "",
    "",
    "",
    157,
    "",
    "",
    "",
    23,
    "",
    "",
    "",
    29,
    "",
    "",
    "",
    23,
    "",
    "",
    "",
    15,
    "",
    "",
    "",
    24,
    "",
    "",
    "",
    186,
    "",
    "",
    "",
    12,
    "",
    "",
    "",
    32,
    "",
    "",
    "",
    36,
    "",
    "",
    "",
    10,
    "",
    "",
    "",
    35,
    "",
    "",
    "",
    20,
    "",
    "",
    "",
    43,
    "",
    "",
    "",
    48,
    "",
    "",
    "",
    35,
    "",
    "",
    "",
    73,
    "",
    "",
    "",
    59,
    "",
    "",
    "",
    56,
    "",
    "",
    "",
    72,
    "",
    "",
    "",
    198,
    "",
    "",
    "",
    37,
    "",
    "",
    "",
    145,
    "",
    "",
    "",
    130,
    "",
    "",
    "",
    45,
    "",
    "",
    "",
    68,
    "",
    "",
    "",
    172,
    "",
    "",
    "",
    281,
    "",
    "",
    "",
    147,
    "",
    "",
    "",
    53,
    "",
    "",
    "",
    160,
    "",
    "",
    "",
    105,
    "",
    "",
    "",
    253,
    "",
    "",
    "",
    82,
    "",
    "",
    "",
    103,
    "",
    "",
    "",
    248,
    "",
    "",
    "",
    75,
    "",
    "",
    "",
    86,
    "",
    "",
    "",
    312,
    "",
    "",
    "",
    301,
    "",
    "",
    "",
    273,
    "",
    "",
    "",
    119,
    "",
    "",
    "",
    191,
    "",
    "",
    "",
    61,
    "",
    "",
    "",
    584,
    "",
    "",
    "",
    696,
    "",
    "",
    "",
    802,
    "",
    "",
    "",
    293,
    "",
    "",
    "",
    104,
    "",
    "",
    "",
    114,
    "",
    "",
    "",
    242,
    "",
    "",
    "",
    259,
    "",
    "",
    "",
    300,
    "",
    "",
    "",
    465,
    "",
    "",
    "",
    180,
    "",
    "",
    "",
    1082,
    "",
    "",
    "",
    697,
    "",
    "",
    "",
    187,
    "",
    "",
    "",
    113,
    "",
    "",
    "",
    201,
    "",
    "",
    "",
    520,
    "",
    "",
    "",
    652,
    "",
    "",
    "",
    197,
    "",
    "",
    "",
    91,
    "",
    "",
    "",
    670,
    "",
    "",
    "",
    159,
    "",
    "",
    "",
    189,
    "",
    "",
    "",
    386,
    "",
    "",
    "",
    403,
    "",
    "",
    "",
    204,
    "",
    "",
    "",
    301,
    "",
    "",
    "",
    378,
    "",
    "",
    "",
    314,
    "",
    "",
    "",
    292,
    "",
    "",
    "",
    352,
    "",
    "",
    "",
    174,
    "",
    "",
    "",
    2778,
    "",
    "",
    "",
    473,
    "",
    "",
    "",
    869,
    "",
    "",
    "",
    1568,
    "",
    "",
    "",
    190,
    "",
    "",
    "",
    198,
    "",
    "",
    "",
    342,
    "",
    "",
    "",
    286,
    "",
    "",
    "",
    1062,
    "",
    "",
    "",
    475,
    "",
    "",
    "",
    354,
    "",
    "",
    "",
    174,
    "",
    "",
    "",
    574,
    "",
    "",
    "",
    1605,
    "",
    "",
    "",
    547,
]

for i in range(len(commands)):
    if commands[i] == "add":
        detectSquares.add(cases[i][0])
    else:
        print(cases[i][0])
        print(expected[i + 1])
        detectSquares.count(cases[i][0])
